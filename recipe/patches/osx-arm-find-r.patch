diff --git a/tools/cmake/FindR.cmake b/tools/cmake/FindR.cmake
index df5c33e..53c9912 100644
--- a/tools/cmake/FindR.cmake
+++ b/tools/cmake/FindR.cmake
@@ -35,7 +35,7 @@ set(TEMP_CMAKE_FIND_APPBUNDLE ${CMAKE_FIND_APPBUNDLE})
 set(CMAKE_FIND_APPBUNDLE "NEVER")
 
 # Find R.
-find_program(R_EXECUTABLE R DOC "R executable.")
+set(R_EXECUTABLE $ENV{R})
 
 if(R_EXECUTABLE)
     # Get the location of R.
@@ -58,28 +58,12 @@ if(R_EXECUTABLE)
         string(REGEX REPLACE ".*([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1"
             R_VERSION_STRING "${R_VERSION_STRING}")
     endif()
-
-    
     set(R_HOME ${R_BASE_DIR} CACHE PATH "R home directory obtained from R RHOME")
     mark_as_advanced(R_HOME)
 endif()
-
-# Find the Rscript program.
-find_program(RSCRIPT_EXECUTABLE Rscript DOC "Rscript executable." HINTS "${R_HOME}/bin")
-
 set(CMAKE_FIND_APPBUNDLE ${TEMP_CMAKE_FIND_APPBUNDLE})
-
-# Search for non-standard R.h include path if header missing
-execute_process(COMMAND ${RSCRIPT_EXECUTABLE} --vanilla "-e" "R.home('include')"
-    RESULT_VARIABLE _haveR_h
-    OUTPUT_VARIABLE _R_INCLUDE_location
-    ERROR_VARIABLE _R_INCLUDE_location
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-
-execute_process(COMMAND ${RSCRIPT_EXECUTABLE} --vanilla "-e" "file.path(R.home('etc'), .Platform$r_arch, 'Makeconf')"
-                OUTPUT_VARIABLE R_MAKECONF
-                ERROR_VARIABLE  R_MAKECONF
-                OUTPUT_STRIP_TRAILING_WHITESPACE)
+set(_R_INCLUDE_location "$ENV{PREFIX}/lib/R/include/")
+set(R_MAKECONF "$ENV{BUILD_PREFIX}/lib/R/etc/Makeconf.$ENV{target_platform}")
 string(REGEX MATCHALL "\".*\"" R_MAKECONF "${R_MAKECONF}")
 string(REGEX REPLACE "\"" "" R_MAKECONF "${R_MAKECONF}")
 # find libR by way of makeconf
@@ -113,8 +97,8 @@ endforeach()
     set(R_INCLUDE_DIR ${_R_INCLUDE_location})
     set(R_LDFLAGS ${LIBR_STRING})
 
-mark_as_advanced(RSCRIPT_EXECUTABLE R_EXECUTABLE)
-set(_REQUIRED_R_VARIABLES R_EXECUTABLE RSCRIPT_EXECUTABLE R_INCLUDE_DIR R_LDFLAGS)
+mark_as_advanced(R_EXECUTABLE)
+set(_REQUIRED_R_VARIABLES R_EXECUTABLE R_INCLUDE_DIR R_LDFLAGS)
 
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(
--- a/configure
+++ b/configure
@@ -32,7 +32,7 @@ CXXFLAGS="$CPPFLAGS $CXXFLAGS $EXTRACXXFLAGS -D_LIBCPP_DISABLE_AVAILABILITY"
 #LDFLAGS="$R_LDFLAGS $R_SHLDFLAGS"

 cd src
-$CMAKE ../tools \
+$CMAKE --trace ../tools \
   -DCMAKE_BUILD_TYPE=RelWithDebInfo \
   -DCMAKE_C_FLAGS_INIT="" \
   -DCMAKE_CXX_FLAGS_INIT="" \
